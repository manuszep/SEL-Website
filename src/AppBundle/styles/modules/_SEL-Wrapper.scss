/****************************************************************************
    SEL - Wrapper
 ****************************************************************************/

/**
 *  Local variables
 **/



/**
 *  Functions
 **/



/**
 *  Mixins
 **/
@mixin FAST-Wrapper-grid-item($mq: false) {
    $suffix: '';

    @if ($mq != false) {
        $suffix: '-#{$mq}';
    }

    .order-1#{$suffix} {
        order: 1;
    }

    .order-2#{$suffix} {
        order: 2;
    }

    .order-3#{$suffix} {
        order: 3;
    }

    .order-4#{$suffix} {
        order: 4;
    }

    .order-5#{$suffix} {
        order: 5;
    }

    .grid-item#{$suffix} {
        margin: 1rem;
    }

    .grid-item-1-5#{$suffix} {
        width: calc(20% - 2em);
    }

    .grid-item-2-5#{$suffix} {
        width: calc(40% - 2em);
    }

    .grid-item-3-5#{$suffix} {
        width: calc(60% - 2em);
    }

    .grid-item-4-5#{$suffix} {
        width: calc(80% - 2em);
    }

    .grid-item-1-4#{$suffix} {
        width: calc(25% - 2em);
    }

    .grid-item-2-4#{$suffix} {
        width: calc(50% - 2em);
    }

    .grid-item-3-4#{$suffix} {
        width: calc(75% - 2em);
    }

    .grid-item-1-3#{$suffix} {
        width: calc(33.3333% - 2em);
    }

    .grid-item-2-3#{$suffix} {
        width: calc(66.6666% - 2em);
    }

    .grid-item-center#{$suffix} {
        margin: 0 auto;
    }

    .grid-v-align#{$suffix} {
        display: flex;
        align-items: center;

        .grid-item#{$suffix} {
            font-size: 1rem;
            display: inline-block;
            vertical-align: middle;
            float: none;
        }
    }
}


/**
 *  Placeholders
 **/



/**
 *  Styles
 **/
@mixin SEL-Wrapper() {
    .wrapper {
        margin: 0 auto;
        padding: 0 1rem;
        width: 96%;

        @include FAST-breakpoint(medium) {
            width: FAST-bp-to-em(map_get($FAST-Util-Breakpoint-list, medium)) - 1em;
        }

        @include FAST-breakpoint(large) {
            width: FAST-bp-to-em(map_get($FAST-Util-Breakpoint-list, large)) - 2em;
        }

        @include FAST-breakpoint(xlarge) {
            width: FAST-bp-to-em(map_get($FAST-Util-Breakpoint-list, xlarge)) - 4em;
        }

        @include FAST-breakpoint(xxlarge) {
            width: FAST-bp-to-em(map_get($FAST-Util-Breakpoint-list, xxlarge)) - 4em;
        }
    }

    .grid {
        margin: 0 (-1rem);display: flex;
        flex-wrap: wrap;
        justify-content: space-between;

        &.text-center {
            justify-content: center;
        }
    }

    @include FAST-Wrapper-grid-item();

    @include FAST-breakpoint((small only)) {
        @include FAST-Wrapper-grid-item(small);
    }

    @include FAST-breakpoint(medium only) {
        @include FAST-Wrapper-grid-item(medium);
    }

    @include FAST-breakpoint(large only) {
        @include FAST-Wrapper-grid-item(large);
    }

    @include FAST-breakpoint(xlarge only) {
        @include FAST-Wrapper-grid-item(xlarge);
    }

    @include FAST-breakpoint(xxlarge only) {
        @include FAST-Wrapper-grid-item(xxlarge);
    }

    @include FAST-breakpoint((small up)) {
        @include FAST-Wrapper-grid-item(small-up);
    }

    @include FAST-breakpoint(medium up) {
        @include FAST-Wrapper-grid-item(medium-up);
    }

    @include FAST-breakpoint(large up) {
        @include FAST-Wrapper-grid-item(large-up);
    }

    @include FAST-breakpoint(xlarge up) {
        @include FAST-Wrapper-grid-item(xlarge-up);
    }

    @include FAST-breakpoint(xxlarge up) {
        @include FAST-Wrapper-grid-item(xxlarge-up);
    }
}
